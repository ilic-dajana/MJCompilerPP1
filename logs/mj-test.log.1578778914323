INFO  22:40:10,330 - Compiling source file: /home/dajana/pp1projekat/workspace/MJCompiler/test/program.mj
INFO  22:40:10,364 - #2 program
INFO  22:40:10,364 - #39 test302
INFO  22:40:10,364 - #7 const
INFO  22:40:10,365 - #39 int
INFO  22:40:10,365 - #39 jedan
INFO  22:40:10,365 - #35 =
INFO  22:40:10,366 - #38 1
INFO  22:40:10,366 - #5 ;
INFO  22:40:10,366 - #39 int
INFO  22:40:10,366 - #39 i
INFO  22:40:10,367 - #5 ;
INFO  22:40:10,367 - #39 bool
INFO  22:40:10,367 - #39 ibool
INFO  22:40:10,367 - #5 ;
INFO  22:40:10,367 - #39 int
INFO  22:40:10,367 - #39 niz
INFO  22:40:10,367 - #36 [
INFO  22:40:10,367 - #37 ]
INFO  22:40:10,367 - #5 ;
INFO  22:40:10,367 - #3 {
INFO  22:40:10,368 - #39 int
INFO  22:40:10,368 - #39 sum
INFO  22:40:10,368 - #17 (
INFO  22:40:10,369 - #39 int
INFO  22:40:10,369 - #39 z
INFO  22:40:10,369 - #22 ,
INFO  22:40:10,369 - #39 int
INFO  22:40:10,369 - #39 d
INFO  22:40:10,370 - #18 )
INFO  22:40:10,370 - #3 {
INFO  22:40:10,370 - #20 return
INFO  22:40:10,371 - #39 z
INFO  22:40:10,371 - #21 +
INFO  22:40:10,373 - #39 d
INFO  22:40:10,373 - #5 ;
INFO  22:40:10,374 - #4 }
INFO  22:40:10,374 - #39 int
INFO  22:40:10,375 - #39 inkrement
INFO  22:40:10,375 - #17 (
INFO  22:40:10,375 - #39 int
INFO  22:40:10,375 - #39 a
INFO  22:40:10,375 - #22 ,
INFO  22:40:10,375 - #39 int
INFO  22:40:10,375 - #39 inc
INFO  22:40:10,375 - #18 )
INFO  22:40:10,375 - #39 int
INFO  22:40:10,375 - #39 pom
INFO  22:40:10,375 - #5 ;
INFO  22:40:10,375 - #3 {
INFO  22:40:10,376 - #25 if
INFO  22:40:10,376 - #17 (
INFO  22:40:10,376 - #39 inc
INFO  22:40:10,376 - #19 ==
INFO  22:40:10,376 - #39 jedan
INFO  22:40:10,377 - #18 )
INFO  22:40:10,378 - #39 pom
INFO  22:40:10,378 - #35 =
INFO  22:40:10,378 - #38 1
INFO  22:40:10,378 - #5 ;
INFO  22:40:10,378 - #26 else
INFO  22:40:10,378 - #25 if
INFO  22:40:10,379 - #17 (
INFO  22:40:10,379 - #39 inc
INFO  22:40:10,379 - #19 ==
INFO  22:40:10,379 - #38 2
INFO  22:40:10,379 - #18 )
INFO  22:40:10,379 - #39 pom
INFO  22:40:10,379 - #35 =
INFO  22:40:10,380 - #39 a
INFO  22:40:10,380 - #5 ;
INFO  22:40:10,380 - #20 return
INFO  22:40:10,380 - #39 sum
INFO  22:40:10,380 - #17 (
INFO  22:40:10,380 - #39 a
INFO  22:40:10,380 - #22 ,
INFO  22:40:10,381 - #39 pom
INFO  22:40:10,381 - #18 )
INFO  22:40:10,381 - #5 ;
INFO  22:40:10,382 - #4 }
INFO  22:40:10,382 - #39 bool
INFO  22:40:10,382 - #39 verify
INFO  22:40:10,382 - #17 (
INFO  22:40:10,382 - #18 )
INFO  22:40:10,382 - #3 {
INFO  22:40:10,383 - #23 print
INFO  22:40:10,383 - #17 (
INFO  22:40:10,383 - #40 v
INFO  22:40:10,383 - #18 )
INFO  22:40:10,384 - #5 ;
INFO  22:40:10,384 - #20 return
INFO  22:40:10,384 - #41 false
INFO  22:40:10,384 - #5 ;
INFO  22:40:10,384 - #4 }
INFO  22:40:10,384 - #24 void
INFO  22:40:10,385 - #39 main
INFO  22:40:10,385 - #17 (
INFO  22:40:10,385 - #18 )
INFO  22:40:10,385 - #3 {
INFO  22:40:10,385 - #25 if
INFO  22:40:10,386 - #17 (
INFO  22:40:10,386 - #38 1
INFO  22:40:10,386 - #16 !=
INFO  22:40:10,386 - #38 1
INFO  22:40:10,386 - #18 )
INFO  22:40:10,386 - #23 print
INFO  22:40:10,387 - #17 (
INFO  22:40:10,387 - #12 -
INFO  22:40:10,387 - #38 6
INFO  22:40:10,387 - #18 )
INFO  22:40:10,387 - #5 ;
INFO  22:40:10,387 - #26 else
INFO  22:40:10,387 - #23 print
INFO  22:40:10,387 - #17 (
INFO  22:40:10,387 - #38 0
INFO  22:40:10,387 - #18 )
INFO  22:40:10,387 - #5 ;
INFO  22:40:10,387 - #39 i
INFO  22:40:10,387 - #35 =
INFO  22:40:10,388 - #38 0
INFO  22:40:10,388 - #5 ;
INFO  22:40:10,388 - #10 for
INFO  22:40:10,388 - #17 (
INFO  22:40:10,388 - #39 i
INFO  22:40:10,388 - #35 =
INFO  22:40:10,388 - #38 0
INFO  22:40:10,388 - #5 ;
INFO  22:40:10,388 - #39 i
INFO  22:40:10,389 - #29 <
INFO  22:40:10,389 - #38 5
INFO  22:40:10,389 - #5 ;
INFO  22:40:10,389 - #39 i
INFO  22:40:10,389 - #33 ++
INFO  22:40:10,389 - #18 )
INFO  22:40:10,389 - #3 {
INFO  22:40:10,390 - #23 print
INFO  22:40:10,390 - #17 (
INFO  22:40:10,390 - #38 1
INFO  22:40:10,390 - #18 )
INFO  22:40:10,390 - #5 ;
INFO  22:40:10,390 - #4 }
INFO  22:40:10,390 - #4 }
INFO  22:40:10,390 - #4 }
INFO  22:40:10,391 - Syntax analysis finished
INFO  22:40:10,393 - Program(
  ProgramIdent(
   test302
  ) [ProgramIdent]
  DeclarationList(
    DeclarationList(
      DeclarationList(
        DeclarationList(
          EmptyDeclarationList(
          ) [EmptyDeclarationList]
          ConstDeclaration(
            ConstDecl(
              Type(
               int
              ) [Type]
              OneConstList(
                ConstNumber(
                 jedan
                 1
                ) [ConstNumber]
              ) [OneConstList]
            ) [ConstDecl]
          ) [ConstDeclaration]
        ) [DeclarationList]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            OneVariableName(
              VariableIdent(
               i
              ) [VariableIdent]
            ) [OneVariableName]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [DeclarationList]
      VarDeclaration(
        VariableDeclaration(
          Type(
           bool
          ) [Type]
          OneVariableName(
            VariableIdent(
             ibool
            ) [VariableIdent]
          ) [OneVariableName]
        ) [VariableDeclaration]
      ) [VarDeclaration]
    ) [DeclarationList]
    VarDeclaration(
      VariableDeclaration(
        Type(
         int
        ) [Type]
        OneVariableName(
          ArrayVariableIdent(
           niz
          ) [ArrayVariableIdent]
        ) [OneVariableName]
      ) [VariableDeclaration]
    ) [VarDeclaration]
  ) [DeclarationList]
  MultipleMethodDeclarations(
    MultipleMethodDeclarations(
      MultipleMethodDeclarations(
        MultipleMethodDeclarations(
          EmptyMethodDeclaration(
          ) [EmptyMethodDeclaration]
          MethodDeclaration(
            MethodIdent(
              NonVoidType(
                Type(
                 int
                ) [Type]
              ) [NonVoidType]
             sum
            ) [MethodIdent]
            FormalParameters(
              MultipleFormalParameters(
                OneFormalParameter(
                  UsualParameter(
                    Type(
                     int
                    ) [Type]
                   z
                  ) [UsualParameter]
                ) [OneFormalParameter]
                UsualParameter(
                  Type(
                   int
                  ) [Type]
                 d
                ) [UsualParameter]
              ) [MultipleFormalParameters]
            ) [FormalParameters]
            EmptyVariableDeclarations(
            ) [EmptyVariableDeclarations]
            MultipleStatements(
              EmptyStatements(
              ) [EmptyStatements]
              ExpressionReturnStatement(
                Expression(
                  AddExpression(
                    OneAddExpression(
                      OneMulFactor(
                        DesignatorF(
                          Designator(
                            DesignatorIdent(
                             z
                            ) [DesignatorIdent]
                            EmptyDesignator(
                            ) [EmptyDesignator]
                          ) [Designator]
                        ) [DesignatorF]
                      ) [OneMulFactor]
                    ) [OneAddExpression]
                    Plus(
                    ) [Plus]
                    OneMulFactor(
                      DesignatorF(
                        Designator(
                          DesignatorIdent(
                           d
                          ) [DesignatorIdent]
                          EmptyDesignator(
                          ) [EmptyDesignator]
                        ) [Designator]
                      ) [DesignatorF]
                    ) [OneMulFactor]
                  ) [AddExpression]
                ) [Expression]
              ) [ExpressionReturnStatement]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MultipleMethodDeclarations]
        MethodDeclaration(
          MethodIdent(
            NonVoidType(
              Type(
               int
              ) [Type]
            ) [NonVoidType]
           inkrement
          ) [MethodIdent]
          FormalParameters(
            MultipleFormalParameters(
              OneFormalParameter(
                UsualParameter(
                  Type(
                   int
                  ) [Type]
                 a
                ) [UsualParameter]
              ) [OneFormalParameter]
              UsualParameter(
                Type(
                 int
                ) [Type]
               inc
              ) [UsualParameter]
            ) [MultipleFormalParameters]
          ) [FormalParameters]
          MultipleVariableDeclarations(
            EmptyVariableDeclarations(
            ) [EmptyVariableDeclarations]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              OneVariableName(
                VariableIdent(
                 pom
                ) [VariableIdent]
              ) [OneVariableName]
            ) [VariableDeclaration]
          ) [MultipleVariableDeclarations]
          MultipleStatements(
            MultipleStatements(
              EmptyStatements(
              ) [EmptyStatements]
              IFELSEStatement(
                IFCondition(
                  OneCondition(
                    OneConditionTerm(
                      RelOpConditionFact(
                        Expression(
                          OneAddExpression(
                            OneMulFactor(
                              DesignatorF(
                                Designator(
                                  DesignatorIdent(
                                   inc
                                  ) [DesignatorIdent]
                                  EmptyDesignator(
                                  ) [EmptyDesignator]
                                ) [Designator]
                              ) [DesignatorF]
                            ) [OneMulFactor]
                          ) [OneAddExpression]
                        ) [Expression]
                        RelopEQ(
                        ) [RelopEQ]
                        Expression(
                          OneAddExpression(
                            OneMulFactor(
                              DesignatorF(
                                Designator(
                                  DesignatorIdent(
                                   jedan
                                  ) [DesignatorIdent]
                                  EmptyDesignator(
                                  ) [EmptyDesignator]
                                ) [Designator]
                              ) [DesignatorF]
                            ) [OneMulFactor]
                          ) [OneAddExpression]
                        ) [Expression]
                      ) [RelOpConditionFact]
                    ) [OneConditionTerm]
                  ) [OneCondition]
                ) [IFCondition]
                DesignatorStatements(
                  AssignDesignator(
                    AssignStatementSttm(
                      Designator(
                        DesignatorIdent(
                         pom
                        ) [DesignatorIdent]
                        EmptyDesignator(
                        ) [EmptyDesignator]
                      ) [Designator]
                      Expression(
                        OneAddExpression(
                          OneMulFactor(
                            NumConstF(
                             1
                            ) [NumConstF]
                          ) [OneMulFactor]
                        ) [OneAddExpression]
                      ) [Expression]
                    ) [AssignStatementSttm]
                  ) [AssignDesignator]
                ) [DesignatorStatements]
                Else(
                ) [Else]
                IFStatement(
                  IFCondition(
                    OneCondition(
                      OneConditionTerm(
                        RelOpConditionFact(
                          Expression(
                            OneAddExpression(
                              OneMulFactor(
                                DesignatorF(
                                  Designator(
                                    DesignatorIdent(
                                     inc
                                    ) [DesignatorIdent]
                                    EmptyDesignator(
                                    ) [EmptyDesignator]
                                  ) [Designator]
                                ) [DesignatorF]
                              ) [OneMulFactor]
                            ) [OneAddExpression]
                          ) [Expression]
                          RelopEQ(
                          ) [RelopEQ]
                          Expression(
                            OneAddExpression(
                              OneMulFactor(
                                NumConstF(
                                 2
                                ) [NumConstF]
                              ) [OneMulFactor]
                            ) [OneAddExpression]
                          ) [Expression]
                        ) [RelOpConditionFact]
                      ) [OneConditionTerm]
                    ) [OneCondition]
                  ) [IFCondition]
                  DesignatorStatements(
                    AssignDesignator(
                      AssignStatementSttm(
                        Designator(
                          DesignatorIdent(
                           pom
                          ) [DesignatorIdent]
                          EmptyDesignator(
                          ) [EmptyDesignator]
                        ) [Designator]
                        Expression(
                          OneAddExpression(
                            OneMulFactor(
                              DesignatorF(
                                Designator(
                                  DesignatorIdent(
                                   a
                                  ) [DesignatorIdent]
                                  EmptyDesignator(
                                  ) [EmptyDesignator]
                                ) [Designator]
                              ) [DesignatorF]
                            ) [OneMulFactor]
                          ) [OneAddExpression]
                        ) [Expression]
                      ) [AssignStatementSttm]
                    ) [AssignDesignator]
                  ) [DesignatorStatements]
                ) [IFStatement]
              ) [IFELSEStatement]
            ) [MultipleStatements]
            ExpressionReturnStatement(
              Expression(
                OneAddExpression(
                  OneMulFactor(
                    FunctionCallF(
                      FunctionCall(
                        Designator(
                          DesignatorIdent(
                           sum
                          ) [DesignatorIdent]
                          EmptyDesignator(
                          ) [EmptyDesignator]
                        ) [Designator]
                        ActualParameters(
                          MultipleActualParameters(
                            OneActualParameter(
                              Expression(
                                OneAddExpression(
                                  OneMulFactor(
                                    DesignatorF(
                                      Designator(
                                        DesignatorIdent(
                                         a
                                        ) [DesignatorIdent]
                                        EmptyDesignator(
                                        ) [EmptyDesignator]
                                      ) [Designator]
                                    ) [DesignatorF]
                                  ) [OneMulFactor]
                                ) [OneAddExpression]
                              ) [Expression]
                            ) [OneActualParameter]
                            Expression(
                              OneAddExpression(
                                OneMulFactor(
                                  DesignatorF(
                                    Designator(
                                      DesignatorIdent(
                                       pom
                                      ) [DesignatorIdent]
                                      EmptyDesignator(
                                      ) [EmptyDesignator]
                                    ) [Designator]
                                  ) [DesignatorF]
                                ) [OneMulFactor]
                              ) [OneAddExpression]
                            ) [Expression]
                          ) [MultipleActualParameters]
                        ) [ActualParameters]
                      ) [FunctionCall]
                    ) [FunctionCallF]
                  ) [OneMulFactor]
                ) [OneAddExpression]
              ) [Expression]
            ) [ExpressionReturnStatement]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MultipleMethodDeclarations]
      MethodDeclaration(
        MethodIdent(
          NonVoidType(
            Type(
             bool
            ) [Type]
          ) [NonVoidType]
         verify
        ) [MethodIdent]
        EmptyFormalParameters(
        ) [EmptyFormalParameters]
        EmptyVariableDeclarations(
        ) [EmptyVariableDeclarations]
        MultipleStatements(
          MultipleStatements(
            EmptyStatements(
            ) [EmptyStatements]
            PrintOneStatement(
              Expression(
                OneAddExpression(
                  OneMulFactor(
                    CharConstF(
                     v
                    ) [CharConstF]
                  ) [OneMulFactor]
                ) [OneAddExpression]
              ) [Expression]
            ) [PrintOneStatement]
          ) [MultipleStatements]
          ExpressionReturnStatement(
            Expression(
              OneAddExpression(
                OneMulFactor(
                  BoolConstF(
                   false
                  ) [BoolConstF]
                ) [OneMulFactor]
              ) [OneAddExpression]
            ) [Expression]
          ) [ExpressionReturnStatement]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MultipleMethodDeclarations]
    MethodDeclaration(
      MethodIdent(
        VoidType(
        ) [VoidType]
       main
      ) [MethodIdent]
      EmptyFormalParameters(
      ) [EmptyFormalParameters]
      EmptyVariableDeclarations(
      ) [EmptyVariableDeclarations]
      MultipleStatements(
        MultipleStatements(
          MultipleStatements(
            EmptyStatements(
            ) [EmptyStatements]
            IFELSEStatement(
              IFCondition(
                OneCondition(
                  OneConditionTerm(
                    RelOpConditionFact(
                      Expression(
                        OneAddExpression(
                          OneMulFactor(
                            NumConstF(
                             1
                            ) [NumConstF]
                          ) [OneMulFactor]
                        ) [OneAddExpression]
                      ) [Expression]
                      RelopNEQ(
                      ) [RelopNEQ]
                      Expression(
                        OneAddExpression(
                          OneMulFactor(
                            NumConstF(
                             1
                            ) [NumConstF]
                          ) [OneMulFactor]
                        ) [OneAddExpression]
                      ) [Expression]
                    ) [RelOpConditionFact]
                  ) [OneConditionTerm]
                ) [OneCondition]
              ) [IFCondition]
              PrintOneStatement(
                NegativeExpression(
                  OneAddExpression(
                    OneMulFactor(
                      NumConstF(
                       6
                      ) [NumConstF]
                    ) [OneMulFactor]
                  ) [OneAddExpression]
                ) [NegativeExpression]
              ) [PrintOneStatement]
              Else(
              ) [Else]
              PrintOneStatement(
                Expression(
                  OneAddExpression(
                    OneMulFactor(
                      NumConstF(
                       0
                      ) [NumConstF]
                    ) [OneMulFactor]
                  ) [OneAddExpression]
                ) [Expression]
              ) [PrintOneStatement]
            ) [IFELSEStatement]
          ) [MultipleStatements]
          DesignatorStatements(
            AssignDesignator(
              AssignStatementSttm(
                Designator(
                  DesignatorIdent(
                   i
                  ) [DesignatorIdent]
                  EmptyDesignator(
                  ) [EmptyDesignator]
                ) [Designator]
                Expression(
                  OneAddExpression(
                    OneMulFactor(
                      NumConstF(
                       0
                      ) [NumConstF]
                    ) [OneMulFactor]
                  ) [OneAddExpression]
                ) [Expression]
              ) [AssignStatementSttm]
            ) [AssignDesignator]
          ) [DesignatorStatements]
        ) [MultipleStatements]
        FORStatement(
          ForIdent(
          ) [ForIdent]
          NonEmptyForInit(
            AssignDesignator(
              AssignStatementSttm(
                Designator(
                  DesignatorIdent(
                   i
                  ) [DesignatorIdent]
                  EmptyDesignator(
                  ) [EmptyDesignator]
                ) [Designator]
                Expression(
                  OneAddExpression(
                    OneMulFactor(
                      NumConstF(
                       0
                      ) [NumConstF]
                    ) [OneMulFactor]
                  ) [OneAddExpression]
                ) [Expression]
              ) [AssignStatementSttm]
            ) [AssignDesignator]
          ) [NonEmptyForInit]
          NonEmptyForCondition(
            OneCondition(
              OneConditionTerm(
                RelOpConditionFact(
                  Expression(
                    OneAddExpression(
                      OneMulFactor(
                        DesignatorF(
                          Designator(
                            DesignatorIdent(
                             i
                            ) [DesignatorIdent]
                            EmptyDesignator(
                            ) [EmptyDesignator]
                          ) [Designator]
                        ) [DesignatorF]
                      ) [OneMulFactor]
                    ) [OneAddExpression]
                  ) [Expression]
                  RelopLESS(
                  ) [RelopLESS]
                  Expression(
                    OneAddExpression(
                      OneMulFactor(
                        NumConstF(
                         5
                        ) [NumConstF]
                      ) [OneMulFactor]
                    ) [OneAddExpression]
                  ) [Expression]
                ) [RelOpConditionFact]
              ) [OneConditionTerm]
            ) [OneCondition]
          ) [NonEmptyForCondition]
          NonEmptyForEnd(
            IncrementDesignator(
              Designator(
                DesignatorIdent(
                 i
                ) [DesignatorIdent]
                EmptyDesignator(
                ) [EmptyDesignator]
              ) [Designator]
            ) [IncrementDesignator]
          ) [NonEmptyForEnd]
          StatementBlock(
            MultipleStatements(
              EmptyStatements(
              ) [EmptyStatements]
              PrintOneStatement(
                Expression(
                  OneAddExpression(
                    OneMulFactor(
                      NumConstF(
                       1
                      ) [NumConstF]
                    ) [OneMulFactor]
                  ) [OneAddExpression]
                ) [Expression]
              ) [PrintOneStatement]
            ) [MultipleStatements]
          ) [StatementBlock]
        ) [FORStatement]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MultipleMethodDeclarations]
) [Program]
ERROR 22:40:10,399 - In function  sum na liniji 13
ERROR 22:40:10,399 - Formal parameter found z na liniji 13
ERROR 22:40:10,399 - Formal parameter found d na liniji 13
ERROR 22:40:10,400 - In function  inkrement na liniji 18
ERROR 22:40:10,400 - Formal parameter found a na liniji 18
ERROR 22:40:10,400 - Formal parameter found inc na liniji 18
ERROR 22:40:10,401 - In function  verify na liniji 26
ERROR 22:40:10,401 - In function  main na liniji 31
INFO  22:40:10,401 - Semantic analysis finished
INFO  22:40:10,402 - Writing bytecode
INFO  22:40:10,402 - Overwriting byte file
INFO  22:40:10,404 - Parsiranje  uspesno zavrseno!
