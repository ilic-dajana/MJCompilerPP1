INFO  16:51:02,122 - Compiling source file: /home/dajana/pp1projekat/workspace/MJCompiler/test/program.mj
INFO  16:51:02,150 - #2 program
INFO  16:51:02,150 - #39 test302
INFO  16:51:02,150 - #7 const
INFO  16:51:02,151 - #39 int
INFO  16:51:02,151 - #39 jedan
INFO  16:51:02,151 - #35 =
INFO  16:51:02,152 - #38 1
INFO  16:51:02,152 - #5 ;
INFO  16:51:02,152 - #39 int
INFO  16:51:02,153 - #39 i
INFO  16:51:02,153 - #5 ;
INFO  16:51:02,153 - #39 bool
INFO  16:51:02,153 - #39 ibool
INFO  16:51:02,153 - #5 ;
INFO  16:51:02,154 - #39 int
INFO  16:51:02,154 - #39 niz
INFO  16:51:02,154 - #36 [
INFO  16:51:02,154 - #37 ]
INFO  16:51:02,154 - #5 ;
INFO  16:51:02,154 - #3 {
INFO  16:51:02,154 - #39 int
INFO  16:51:02,154 - #39 sum
INFO  16:51:02,155 - #17 (
INFO  16:51:02,155 - #39 int
INFO  16:51:02,155 - #39 z
INFO  16:51:02,156 - #22 ,
INFO  16:51:02,156 - #39 int
INFO  16:51:02,156 - #39 d
INFO  16:51:02,156 - #18 )
INFO  16:51:02,156 - #3 {
INFO  16:51:02,157 - #20 return
INFO  16:51:02,157 - #39 z
INFO  16:51:02,157 - #21 +
INFO  16:51:02,158 - #39 d
INFO  16:51:02,159 - #5 ;
INFO  16:51:02,159 - #4 }
INFO  16:51:02,159 - #39 int
INFO  16:51:02,160 - #39 inkrement
INFO  16:51:02,160 - #17 (
INFO  16:51:02,160 - #39 int
INFO  16:51:02,160 - #39 a
INFO  16:51:02,160 - #22 ,
INFO  16:51:02,160 - #39 int
INFO  16:51:02,161 - #39 inc
INFO  16:51:02,161 - #18 )
INFO  16:51:02,161 - #39 int
INFO  16:51:02,161 - #39 pom
INFO  16:51:02,161 - #5 ;
INFO  16:51:02,161 - #3 {
INFO  16:51:02,161 - #25 if
INFO  16:51:02,161 - #17 (
INFO  16:51:02,161 - #39 inc
INFO  16:51:02,161 - #19 ==
INFO  16:51:02,162 - #39 jedan
INFO  16:51:02,162 - #18 )
INFO  16:51:02,163 - #39 pom
INFO  16:51:02,163 - #35 =
INFO  16:51:02,163 - #38 1
INFO  16:51:02,163 - #5 ;
INFO  16:51:02,164 - #26 else
INFO  16:51:02,165 - #25 if
INFO  16:51:02,165 - #17 (
INFO  16:51:02,165 - #39 inc
INFO  16:51:02,165 - #19 ==
INFO  16:51:02,165 - #38 2
INFO  16:51:02,165 - #18 )
INFO  16:51:02,166 - #39 pom
INFO  16:51:02,166 - #35 =
INFO  16:51:02,166 - #39 a
INFO  16:51:02,166 - #5 ;
INFO  16:51:02,166 - #20 return
INFO  16:51:02,167 - #39 sum
INFO  16:51:02,167 - #17 (
INFO  16:51:02,167 - #39 a
INFO  16:51:02,167 - #22 ,
INFO  16:51:02,167 - #39 pom
INFO  16:51:02,168 - #18 )
INFO  16:51:02,168 - #5 ;
INFO  16:51:02,169 - #4 }
INFO  16:51:02,169 - #39 bool
INFO  16:51:02,169 - #39 verify
INFO  16:51:02,169 - #17 (
INFO  16:51:02,170 - #18 )
INFO  16:51:02,170 - #3 {
INFO  16:51:02,170 - #23 print
INFO  16:51:02,170 - #17 (
INFO  16:51:02,171 - #40 v
INFO  16:51:02,171 - #18 )
INFO  16:51:02,171 - #5 ;
INFO  16:51:02,171 - #20 return
INFO  16:51:02,171 - #41 false
INFO  16:51:02,171 - #5 ;
INFO  16:51:02,172 - #4 }
INFO  16:51:02,172 - #24 void
INFO  16:51:02,172 - #39 main
INFO  16:51:02,172 - #17 (
INFO  16:51:02,172 - #18 )
INFO  16:51:02,172 - #3 {
INFO  16:51:02,173 - #25 if
INFO  16:51:02,173 - #17 (
INFO  16:51:02,173 - #38 1
INFO  16:51:02,173 - #16 !=
INFO  16:51:02,173 - #38 1
INFO  16:51:02,173 - #18 )
INFO  16:51:02,173 - #23 print
INFO  16:51:02,173 - #17 (
INFO  16:51:02,173 - #12 -
INFO  16:51:02,173 - #38 6
INFO  16:51:02,173 - #18 )
INFO  16:51:02,174 - #5 ;
INFO  16:51:02,174 - #26 else
INFO  16:51:02,174 - #23 print
INFO  16:51:02,174 - #17 (
INFO  16:51:02,174 - #38 0
INFO  16:51:02,174 - #18 )
INFO  16:51:02,174 - #5 ;
INFO  16:51:02,174 - #39 ibool
INFO  16:51:02,174 - #35 =
INFO  16:51:02,174 - #41 false
INFO  16:51:02,174 - #5 ;
INFO  16:51:02,174 - #39 i
INFO  16:51:02,175 - #35 =
INFO  16:51:02,175 - #38 0
INFO  16:51:02,175 - #5 ;
INFO  16:51:02,175 - #10 for
INFO  16:51:02,175 - #17 (
INFO  16:51:02,175 - #39 i
INFO  16:51:02,176 - #35 =
INFO  16:51:02,176 - #38 0
INFO  16:51:02,176 - #5 ;
INFO  16:51:02,176 - #39 i
INFO  16:51:02,176 - #29 <
INFO  16:51:02,176 - #38 5
INFO  16:51:02,176 - #5 ;
INFO  16:51:02,177 - #39 i
INFO  16:51:02,177 - #33 ++
INFO  16:51:02,177 - #18 )
INFO  16:51:02,177 - #3 {
INFO  16:51:02,177 - #25 if
INFO  16:51:02,177 - #17 (
INFO  16:51:02,177 - #39 i
INFO  16:51:02,177 - #19 ==
INFO  16:51:02,177 - #38 2
INFO  16:51:02,178 - #18 )
INFO  16:51:02,178 - #39 ibool
INFO  16:51:02,178 - #35 =
INFO  16:51:02,178 - #41 true
INFO  16:51:02,178 - #5 ;
INFO  16:51:02,178 - #4 }
INFO  16:51:02,178 - #25 if
INFO  16:51:02,178 - #17 (
INFO  16:51:02,178 - #39 ibool
INFO  16:51:02,178 - #18 )
INFO  16:51:02,178 - #25 if
INFO  16:51:02,178 - #17 (
INFO  16:51:02,178 - #39 i
INFO  16:51:02,178 - #19 ==
INFO  16:51:02,179 - #38 5
INFO  16:51:02,179 - #18 )
INFO  16:51:02,179 - #23 print
INFO  16:51:02,179 - #17 (
INFO  16:51:02,179 - #38 1
INFO  16:51:02,179 - #18 )
INFO  16:51:02,179 - #5 ;
INFO  16:51:02,179 - #26 else
INFO  16:51:02,179 - #23 print
INFO  16:51:02,179 - #17 (
INFO  16:51:02,179 - #12 -
INFO  16:51:02,179 - #38 1
INFO  16:51:02,179 - #18 )
INFO  16:51:02,179 - #5 ;
INFO  16:51:02,179 - #39 niz
INFO  16:51:02,179 - #35 =
INFO  16:51:02,179 - #8 new
INFO  16:51:02,179 - #39 int
INFO  16:51:02,179 - #36 [
INFO  16:51:02,179 - #38 3
INFO  16:51:02,179 - #37 ]
INFO  16:51:02,180 - #5 ;
INFO  16:51:02,180 - #39 niz
INFO  16:51:02,180 - #36 [
INFO  16:51:02,180 - #38 0
INFO  16:51:02,180 - #37 ]
INFO  16:51:02,180 - #35 =
INFO  16:51:02,180 - #38 1
INFO  16:51:02,180 - #5 ;
INFO  16:51:02,180 - #39 niz
INFO  16:51:02,180 - #36 [
INFO  16:51:02,180 - #38 1
INFO  16:51:02,180 - #37 ]
INFO  16:51:02,180 - #35 =
INFO  16:51:02,180 - #38 2
INFO  16:51:02,180 - #5 ;
INFO  16:51:02,180 - #39 niz
INFO  16:51:02,180 - #36 [
INFO  16:51:02,181 - #38 2
INFO  16:51:02,181 - #37 ]
INFO  16:51:02,181 - #35 =
INFO  16:51:02,181 - #39 sum
INFO  16:51:02,181 - #17 (
INFO  16:51:02,181 - #39 niz
INFO  16:51:02,181 - #36 [
INFO  16:51:02,181 - #38 1
INFO  16:51:02,181 - #37 ]
INFO  16:51:02,181 - #22 ,
INFO  16:51:02,181 - #39 niz
INFO  16:51:02,181 - #36 [
INFO  16:51:02,181 - #38 0
INFO  16:51:02,181 - #37 ]
INFO  16:51:02,181 - #18 )
INFO  16:51:02,181 - #21 +
INFO  16:51:02,181 - #38 1
INFO  16:51:02,181 - #5 ;
INFO  16:51:02,181 - #25 if
INFO  16:51:02,181 - #17 (
INFO  16:51:02,181 - #39 niz
INFO  16:51:02,181 - #36 [
INFO  16:51:02,181 - #38 2
INFO  16:51:02,181 - #37 ]
INFO  16:51:02,181 - #19 ==
INFO  16:51:02,181 - #38 4
INFO  16:51:02,181 - #32 ||
INFO  16:51:02,182 - #39 verify
INFO  16:51:02,182 - #17 (
INFO  16:51:02,182 - #18 )
INFO  16:51:02,182 - #18 )
INFO  16:51:02,182 - #23 print
INFO  16:51:02,182 - #17 (
INFO  16:51:02,182 - #39 ord
INFO  16:51:02,182 - #17 (
INFO  16:51:02,182 - #40 A
INFO  16:51:02,182 - #18 )
INFO  16:51:02,182 - #18 )
INFO  16:51:02,182 - #5 ;
INFO  16:51:02,182 - #26 else
INFO  16:51:02,182 - #23 print
INFO  16:51:02,182 - #17 (
INFO  16:51:02,182 - #39 ord
INFO  16:51:02,182 - #17 (
INFO  16:51:02,183 - #40 a
INFO  16:51:02,183 - #18 )
INFO  16:51:02,183 - #18 )
INFO  16:51:02,183 - #5 ;
INFO  16:51:02,183 - #23 print
INFO  16:51:02,185 - #17 (
INFO  16:51:02,185 - #39 eol
INFO  16:51:02,185 - #18 )
INFO  16:51:02,185 - #5 ;
INFO  16:51:02,185 - #39 i
INFO  16:51:02,185 - #35 =
INFO  16:51:02,185 - #38 0
INFO  16:51:02,185 - #5 ;
INFO  16:51:02,185 - #10 for
INFO  16:51:02,185 - #17 (
INFO  16:51:02,185 - #5 ;
INFO  16:51:02,186 - #39 i
INFO  16:51:02,186 - #29 <
INFO  16:51:02,186 - #38 10
INFO  16:51:02,186 - #5 ;
INFO  16:51:02,186 - #18 )
INFO  16:51:02,187 - #3 {
INFO  16:51:02,187 - #25 if
INFO  16:51:02,187 - #17 (
INFO  16:51:02,187 - #39 i
INFO  16:51:02,187 - #19 ==
INFO  16:51:02,187 - #38 3
INFO  16:51:02,187 - #18 )
INFO  16:51:02,187 - #3 {
INFO  16:51:02,187 - #39 i
INFO  16:51:02,187 - #33 ++
INFO  16:51:02,187 - #5 ;
INFO  16:51:02,187 - #4 }
INFO  16:51:02,187 - #25 if
ERROR 16:51:02,187 - 
Sintaksna greska na liniji 63
ERROR 16:51:02,188 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 63
