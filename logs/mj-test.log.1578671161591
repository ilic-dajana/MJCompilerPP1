INFO  16:45:37,962 - Compiling source file: /home/dajana/pp1projekat/workspace/MJCompiler/test/program.mj
INFO  16:45:38,051 - #2 program
INFO  16:45:38,051 - #39 test302
INFO  16:45:38,051 - #7 const
INFO  16:45:38,052 - #39 int
INFO  16:45:38,052 - #39 jedan
INFO  16:45:38,053 - #35 =
INFO  16:45:38,053 - #38 1
INFO  16:45:38,053 - #5 ;
INFO  16:45:38,053 - #39 int
INFO  16:45:38,054 - #39 i
INFO  16:45:38,054 - #5 ;
INFO  16:45:38,055 - #39 bool
INFO  16:45:38,055 - #39 ibool
INFO  16:45:38,055 - #5 ;
INFO  16:45:38,056 - #39 int
INFO  16:45:38,056 - #39 niz
INFO  16:45:38,056 - #36 [
INFO  16:45:38,056 - #37 ]
INFO  16:45:38,056 - #5 ;
INFO  16:45:38,056 - #3 {
INFO  16:45:38,056 - #39 int
INFO  16:45:38,057 - #39 sum
INFO  16:45:38,057 - #17 (
INFO  16:45:38,057 - #39 int
INFO  16:45:38,058 - #39 z
INFO  16:45:38,058 - #22 ,
INFO  16:45:38,058 - #39 int
INFO  16:45:38,058 - #39 d
INFO  16:45:38,058 - #18 )
INFO  16:45:38,058 - #3 {
INFO  16:45:38,059 - #20 return
INFO  16:45:38,060 - #39 z
INFO  16:45:38,060 - #21 +
INFO  16:45:38,062 - #39 d
INFO  16:45:38,064 - #5 ;
INFO  16:45:38,064 - #4 }
INFO  16:45:38,065 - #39 int
INFO  16:45:38,065 - #39 inkrement
INFO  16:45:38,065 - #17 (
INFO  16:45:38,065 - #39 int
INFO  16:45:38,065 - #39 a
INFO  16:45:38,065 - #22 ,
INFO  16:45:38,066 - #39 int
INFO  16:45:38,066 - #39 inc
INFO  16:45:38,066 - #18 )
INFO  16:45:38,066 - #39 int
INFO  16:45:38,066 - #39 pom
INFO  16:45:38,066 - #5 ;
INFO  16:45:38,066 - #3 {
INFO  16:45:38,066 - #25 if
INFO  16:45:38,066 - #17 (
INFO  16:45:38,067 - #39 inc
INFO  16:45:38,067 - #19 ==
INFO  16:45:38,067 - #39 jedan
INFO  16:45:38,068 - #18 )
INFO  16:45:38,069 - #39 pom
INFO  16:45:38,069 - #35 =
INFO  16:45:38,069 - #38 1
INFO  16:45:38,069 - #5 ;
INFO  16:45:38,071 - #26 else
INFO  16:45:38,071 - #25 if
INFO  16:45:38,072 - #17 (
INFO  16:45:38,072 - #39 inc
INFO  16:45:38,072 - #19 ==
INFO  16:45:38,072 - #38 2
INFO  16:45:38,072 - #18 )
INFO  16:45:38,072 - #39 pom
INFO  16:45:38,072 - #35 =
INFO  16:45:38,072 - #39 a
INFO  16:45:38,073 - #5 ;
INFO  16:45:38,073 - #20 return
INFO  16:45:38,073 - #39 sum
INFO  16:45:38,073 - #17 (
INFO  16:45:38,073 - #39 a
INFO  16:45:38,074 - #22 ,
INFO  16:45:38,074 - #39 pom
INFO  16:45:38,074 - #18 )
INFO  16:45:38,074 - #5 ;
INFO  16:45:38,075 - #4 }
INFO  16:45:38,076 - #39 bool
INFO  16:45:38,076 - #39 verify
INFO  16:45:38,076 - #17 (
INFO  16:45:38,076 - #18 )
INFO  16:45:38,076 - #3 {
INFO  16:45:38,077 - #23 print
INFO  16:45:38,077 - #17 (
INFO  16:45:38,077 - #40 v
INFO  16:45:38,077 - #18 )
INFO  16:45:38,077 - #5 ;
INFO  16:45:38,077 - #20 return
INFO  16:45:38,077 - #41 false
INFO  16:45:38,078 - #5 ;
INFO  16:45:38,078 - #4 }
INFO  16:45:38,078 - #24 void
INFO  16:45:38,078 - #39 main
INFO  16:45:38,079 - #17 (
INFO  16:45:38,079 - #18 )
INFO  16:45:38,079 - #3 {
INFO  16:45:38,079 - #25 if
INFO  16:45:38,079 - #17 (
INFO  16:45:38,079 - #38 1
INFO  16:45:38,079 - #16 !=
INFO  16:45:38,079 - #38 1
INFO  16:45:38,080 - #18 )
INFO  16:45:38,080 - #23 print
INFO  16:45:38,080 - #17 (
INFO  16:45:38,080 - #12 -
INFO  16:45:38,080 - #38 6
INFO  16:45:38,081 - #18 )
INFO  16:45:38,081 - #5 ;
INFO  16:45:38,081 - #26 else
INFO  16:45:38,081 - #23 print
INFO  16:45:38,081 - #17 (
INFO  16:45:38,081 - #38 0
INFO  16:45:38,081 - #18 )
INFO  16:45:38,081 - #5 ;
INFO  16:45:38,081 - #39 ibool
INFO  16:45:38,081 - #35 =
INFO  16:45:38,082 - #41 false
INFO  16:45:38,082 - #5 ;
INFO  16:45:38,082 - #39 i
INFO  16:45:38,082 - #35 =
INFO  16:45:38,082 - #38 0
INFO  16:45:38,082 - #5 ;
INFO  16:45:38,082 - #10 for
INFO  16:45:38,082 - #17 (
INFO  16:45:38,083 - #39 i
INFO  16:45:38,083 - #35 =
INFO  16:45:38,083 - #38 0
INFO  16:45:38,084 - #5 ;
INFO  16:45:38,084 - #39 i
INFO  16:45:38,084 - #29 <
INFO  16:45:38,084 - #38 5
INFO  16:45:38,085 - #5 ;
INFO  16:45:38,085 - #39 i
INFO  16:45:38,085 - #33 ++
INFO  16:45:38,086 - #18 )
INFO  16:45:38,086 - #3 {
INFO  16:45:38,086 - #25 if
INFO  16:45:38,086 - #17 (
INFO  16:45:38,086 - #39 i
INFO  16:45:38,086 - #19 ==
INFO  16:45:38,086 - #38 2
INFO  16:45:38,087 - #18 )
INFO  16:45:38,087 - #39 ibool
INFO  16:45:38,087 - #35 =
INFO  16:45:38,087 - #41 true
INFO  16:45:38,087 - #5 ;
INFO  16:45:38,087 - #4 }
INFO  16:45:38,087 - #25 if
INFO  16:45:38,088 - #17 (
INFO  16:45:38,088 - #39 ibool
INFO  16:45:38,088 - #18 )
INFO  16:45:38,088 - #25 if
INFO  16:45:38,088 - #17 (
INFO  16:45:38,088 - #39 i
INFO  16:45:38,088 - #19 ==
INFO  16:45:38,088 - #38 5
INFO  16:45:38,088 - #18 )
INFO  16:45:38,089 - #23 print
INFO  16:45:38,089 - #17 (
INFO  16:45:38,089 - #38 1
INFO  16:45:38,089 - #18 )
INFO  16:45:38,089 - #5 ;
INFO  16:45:38,089 - #26 else
INFO  16:45:38,089 - #23 print
INFO  16:45:38,089 - #17 (
INFO  16:45:38,089 - #12 -
INFO  16:45:38,089 - #38 1
INFO  16:45:38,089 - #18 )
INFO  16:45:38,089 - #5 ;
INFO  16:45:38,089 - #39 niz
INFO  16:45:38,089 - #35 =
INFO  16:45:38,089 - #8 new
INFO  16:45:38,089 - #39 int
INFO  16:45:38,090 - #36 [
INFO  16:45:38,090 - #38 3
INFO  16:45:38,090 - #37 ]
INFO  16:45:38,090 - #5 ;
INFO  16:45:38,090 - #39 niz
INFO  16:45:38,090 - #36 [
INFO  16:45:38,090 - #38 0
INFO  16:45:38,090 - #37 ]
INFO  16:45:38,090 - #35 =
INFO  16:45:38,091 - #38 1
INFO  16:45:38,091 - #5 ;
INFO  16:45:38,091 - #39 niz
INFO  16:45:38,091 - #36 [
INFO  16:45:38,091 - #38 1
INFO  16:45:38,091 - #37 ]
INFO  16:45:38,091 - #35 =
INFO  16:45:38,091 - #38 2
INFO  16:45:38,091 - #5 ;
INFO  16:45:38,091 - #39 niz
INFO  16:45:38,091 - #36 [
INFO  16:45:38,091 - #38 2
INFO  16:45:38,091 - #37 ]
INFO  16:45:38,092 - #35 =
INFO  16:45:38,092 - #39 sum
INFO  16:45:38,092 - #17 (
INFO  16:45:38,092 - #39 niz
INFO  16:45:38,092 - #36 [
INFO  16:45:38,092 - #38 1
INFO  16:45:38,092 - #37 ]
INFO  16:45:38,092 - #22 ,
INFO  16:45:38,092 - #39 niz
INFO  16:45:38,092 - #36 [
INFO  16:45:38,092 - #38 0
INFO  16:45:38,092 - #37 ]
INFO  16:45:38,092 - #18 )
INFO  16:45:38,093 - #21 +
INFO  16:45:38,093 - #38 1
INFO  16:45:38,093 - #5 ;
INFO  16:45:38,093 - #25 if
INFO  16:45:38,093 - #17 (
INFO  16:45:38,093 - #39 niz
INFO  16:45:38,093 - #36 [
INFO  16:45:38,093 - #38 2
INFO  16:45:38,093 - #37 ]
INFO  16:45:38,093 - #19 ==
INFO  16:45:38,093 - #38 4
INFO  16:45:38,093 - #32 ||
INFO  16:45:38,094 - #39 verify
INFO  16:45:38,094 - #17 (
INFO  16:45:38,094 - #18 )
INFO  16:45:38,096 - #18 )
INFO  16:45:38,096 - #23 print
INFO  16:45:38,096 - #17 (
INFO  16:45:38,097 - #39 ord
INFO  16:45:38,097 - #17 (
INFO  16:45:38,097 - #40 A
INFO  16:45:38,097 - #18 )
INFO  16:45:38,097 - #18 )
INFO  16:45:38,097 - #5 ;
INFO  16:45:38,097 - #26 else
INFO  16:45:38,097 - #23 print
INFO  16:45:38,097 - #17 (
INFO  16:45:38,097 - #39 ord
INFO  16:45:38,097 - #17 (
INFO  16:45:38,097 - #40 a
INFO  16:45:38,097 - #18 )
INFO  16:45:38,097 - #18 )
INFO  16:45:38,098 - #5 ;
INFO  16:45:38,098 - #23 print
INFO  16:45:38,100 - #17 (
INFO  16:45:38,100 - #39 eol
INFO  16:45:38,100 - #18 )
INFO  16:45:38,100 - #5 ;
INFO  16:45:38,100 - #39 i
INFO  16:45:38,100 - #35 =
INFO  16:45:38,101 - #38 0
INFO  16:45:38,101 - #5 ;
INFO  16:45:38,101 - #10 for
INFO  16:45:38,101 - #17 (
INFO  16:45:38,101 - #5 ;
INFO  16:45:38,102 - #39 i
INFO  16:45:38,102 - #29 <
INFO  16:45:38,102 - #38 10
INFO  16:45:38,102 - #5 ;
INFO  16:45:38,102 - #18 )
INFO  16:45:38,103 - #3 {
INFO  16:45:38,103 - #25 if
INFO  16:45:38,103 - #17 (
INFO  16:45:38,104 - #39 i
INFO  16:45:38,104 - #19 ==
INFO  16:45:38,104 - #38 3
INFO  16:45:38,104 - #18 )
INFO  16:45:38,104 - #3 {
INFO  16:45:38,104 - #39 i
INFO  16:45:38,104 - #33 ++
INFO  16:45:38,104 - #5 ;
INFO  16:45:38,104 - #11 continue
ERROR 18:58:33,583 - 
Sintaksna greska na liniji 61
ERROR 18:58:45,227 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 61
