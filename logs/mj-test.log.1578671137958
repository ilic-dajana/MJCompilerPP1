INFO  16:45:29,341 - Compiling source file: /home/dajana/pp1projekat/workspace/MJCompiler/test/program.mj
INFO  16:45:29,367 - #2 program
INFO  16:45:29,367 - #39 test302
INFO  16:45:29,367 - #7 const
INFO  16:45:29,368 - #39 int
INFO  16:45:29,368 - #39 jedan
INFO  16:45:29,368 - #35 =
INFO  16:45:29,369 - #38 1
INFO  16:45:29,369 - #5 ;
INFO  16:45:29,369 - #39 int
INFO  16:45:29,370 - #39 i
INFO  16:45:29,370 - #5 ;
INFO  16:45:29,370 - #39 bool
INFO  16:45:29,370 - #39 ibool
INFO  16:45:29,370 - #5 ;
INFO  16:45:29,371 - #39 int
INFO  16:45:29,371 - #39 niz
INFO  16:45:29,371 - #36 [
INFO  16:45:29,371 - #37 ]
INFO  16:45:29,371 - #5 ;
INFO  16:45:29,371 - #3 {
INFO  16:45:29,371 - #39 int
INFO  16:45:29,372 - #39 sum
INFO  16:45:29,372 - #17 (
INFO  16:45:29,372 - #39 int
INFO  16:45:29,372 - #39 z
INFO  16:45:29,372 - #22 ,
INFO  16:45:29,372 - #39 int
INFO  16:45:29,373 - #39 d
INFO  16:45:29,373 - #18 )
INFO  16:45:29,373 - #3 {
INFO  16:45:29,373 - #20 return
INFO  16:45:29,373 - #39 z
INFO  16:45:29,373 - #21 +
INFO  16:45:29,374 - #39 d
INFO  16:45:29,375 - #5 ;
INFO  16:45:29,375 - #4 }
INFO  16:45:29,376 - #39 int
INFO  16:45:29,376 - #39 inkrement
INFO  16:45:29,376 - #17 (
INFO  16:45:29,376 - #39 int
INFO  16:45:29,376 - #39 a
INFO  16:45:29,376 - #22 ,
INFO  16:45:29,377 - #39 int
INFO  16:45:29,377 - #39 inc
INFO  16:45:29,377 - #18 )
INFO  16:45:29,377 - #39 int
INFO  16:45:29,377 - #39 pom
INFO  16:45:29,377 - #5 ;
INFO  16:45:29,377 - #3 {
INFO  16:45:29,377 - #25 if
INFO  16:45:29,377 - #17 (
INFO  16:45:29,377 - #39 inc
INFO  16:45:29,377 - #19 ==
INFO  16:45:29,378 - #39 jedan
INFO  16:45:29,378 - #18 )
INFO  16:45:29,379 - #39 pom
INFO  16:45:29,379 - #35 =
INFO  16:45:29,379 - #38 1
INFO  16:45:29,379 - #5 ;
INFO  16:45:29,380 - #26 else
INFO  16:45:29,381 - #25 if
INFO  16:45:29,383 - #17 (
INFO  16:45:29,383 - #39 inc
INFO  16:45:29,383 - #19 ==
INFO  16:45:29,384 - #38 2
INFO  16:45:29,384 - #18 )
INFO  16:45:29,384 - #39 pom
INFO  16:45:29,384 - #35 =
INFO  16:45:29,384 - #39 a
INFO  16:45:29,384 - #5 ;
INFO  16:45:29,384 - #20 return
INFO  16:45:29,392 - #39 sum
INFO  16:45:29,392 - #17 (
INFO  16:45:29,392 - #39 a
INFO  16:45:29,392 - #22 ,
INFO  16:45:29,392 - #39 pom
INFO  16:45:29,392 - #18 )
INFO  16:45:29,393 - #5 ;
INFO  16:45:29,394 - #4 }
INFO  16:45:29,394 - #39 bool
INFO  16:45:29,394 - #39 verify
INFO  16:45:29,394 - #17 (
INFO  16:45:29,394 - #18 )
INFO  16:45:29,394 - #3 {
INFO  16:45:29,394 - #23 print
INFO  16:45:29,395 - #17 (
INFO  16:45:29,395 - #40 v
INFO  16:45:29,395 - #18 )
INFO  16:45:29,395 - #5 ;
INFO  16:45:29,395 - #20 return
INFO  16:45:29,395 - #41 false
INFO  16:45:29,395 - #5 ;
INFO  16:45:29,396 - #4 }
INFO  16:45:29,396 - #24 void
INFO  16:45:29,396 - #39 main
INFO  16:45:29,396 - #17 (
INFO  16:45:29,396 - #18 )
INFO  16:45:29,396 - #3 {
INFO  16:45:29,397 - #25 if
INFO  16:45:29,397 - #17 (
INFO  16:45:29,397 - #38 1
INFO  16:45:29,397 - #16 !=
INFO  16:45:29,397 - #38 1
INFO  16:45:29,397 - #18 )
INFO  16:45:29,397 - #23 print
INFO  16:45:29,398 - #17 (
INFO  16:45:29,398 - #12 -
INFO  16:45:29,398 - #38 6
INFO  16:45:29,398 - #18 )
INFO  16:45:29,398 - #5 ;
INFO  16:45:29,398 - #26 else
INFO  16:45:29,398 - #23 print
INFO  16:45:29,398 - #17 (
INFO  16:45:29,398 - #38 0
INFO  16:45:29,398 - #18 )
INFO  16:45:29,398 - #5 ;
INFO  16:45:29,398 - #39 ibool
INFO  16:45:29,399 - #35 =
INFO  16:45:29,399 - #41 false
INFO  16:45:29,399 - #5 ;
INFO  16:45:29,399 - #39 i
INFO  16:45:29,399 - #35 =
INFO  16:45:29,399 - #38 0
INFO  16:45:29,399 - #5 ;
INFO  16:45:29,399 - #10 for
INFO  16:45:29,399 - #17 (
INFO  16:45:29,400 - #39 i
INFO  16:45:29,400 - #35 =
INFO  16:45:29,400 - #38 0
INFO  16:45:29,400 - #5 ;
INFO  16:45:29,400 - #39 i
INFO  16:45:29,400 - #29 <
INFO  16:45:29,400 - #38 5
INFO  16:45:29,401 - #5 ;
INFO  16:45:29,401 - #39 i
INFO  16:45:29,401 - #33 ++
INFO  16:45:29,401 - #18 )
INFO  16:45:29,401 - #3 {
INFO  16:45:29,401 - #25 if
INFO  16:45:29,401 - #17 (
INFO  16:45:29,401 - #39 i
INFO  16:45:29,402 - #19 ==
INFO  16:45:29,402 - #38 2
INFO  16:45:29,402 - #18 )
INFO  16:45:29,402 - #39 ibool
INFO  16:45:29,402 - #35 =
INFO  16:45:29,402 - #41 true
INFO  16:45:29,402 - #5 ;
INFO  16:45:29,402 - #4 }
INFO  16:45:29,402 - #25 if
INFO  16:45:29,402 - #17 (
INFO  16:45:29,402 - #39 ibool
INFO  16:45:29,402 - #18 )
INFO  16:45:29,402 - #25 if
INFO  16:45:29,402 - #17 (
INFO  16:45:29,403 - #39 i
INFO  16:45:29,403 - #19 ==
INFO  16:45:29,403 - #38 5
INFO  16:45:29,403 - #18 )
INFO  16:45:29,403 - #23 print
INFO  16:45:29,403 - #17 (
INFO  16:45:29,403 - #38 1
INFO  16:45:29,403 - #18 )
INFO  16:45:29,403 - #5 ;
INFO  16:45:29,403 - #26 else
INFO  16:45:29,403 - #23 print
INFO  16:45:29,403 - #17 (
INFO  16:45:29,403 - #12 -
INFO  16:45:29,403 - #38 1
INFO  16:45:29,403 - #18 )
INFO  16:45:29,403 - #5 ;
INFO  16:45:29,403 - #39 niz
INFO  16:45:29,403 - #35 =
INFO  16:45:29,403 - #8 new
INFO  16:45:29,403 - #39 int
INFO  16:45:29,403 - #36 [
INFO  16:45:29,403 - #38 3
INFO  16:45:29,404 - #37 ]
INFO  16:45:29,404 - #5 ;
INFO  16:45:29,404 - #39 niz
INFO  16:45:29,404 - #36 [
INFO  16:45:29,404 - #38 0
INFO  16:45:29,404 - #37 ]
INFO  16:45:29,404 - #35 =
INFO  16:45:29,404 - #38 1
INFO  16:45:29,404 - #5 ;
INFO  16:45:29,404 - #39 niz
INFO  16:45:29,404 - #36 [
INFO  16:45:29,404 - #38 1
INFO  16:45:29,404 - #37 ]
INFO  16:45:29,404 - #35 =
INFO  16:45:29,404 - #38 2
INFO  16:45:29,404 - #5 ;
INFO  16:45:29,405 - #39 niz
INFO  16:45:29,405 - #36 [
INFO  16:45:29,405 - #38 2
INFO  16:45:29,405 - #37 ]
INFO  16:45:29,405 - #35 =
INFO  16:45:29,405 - #39 sum
INFO  16:45:29,405 - #17 (
INFO  16:45:29,405 - #39 niz
INFO  16:45:29,405 - #36 [
INFO  16:45:29,405 - #38 1
INFO  16:45:29,405 - #37 ]
INFO  16:45:29,405 - #22 ,
INFO  16:45:29,405 - #39 niz
INFO  16:45:29,405 - #36 [
INFO  16:45:29,405 - #38 0
INFO  16:45:29,405 - #37 ]
INFO  16:45:29,405 - #18 )
INFO  16:45:29,405 - #21 +
INFO  16:45:29,405 - #38 1
INFO  16:45:29,405 - #5 ;
INFO  16:45:29,405 - #25 if
INFO  16:45:29,405 - #17 (
INFO  16:45:29,405 - #39 niz
INFO  16:45:29,405 - #36 [
INFO  16:45:29,405 - #38 2
INFO  16:45:29,405 - #37 ]
INFO  16:45:29,405 - #19 ==
INFO  16:45:29,405 - #38 4
INFO  16:45:29,406 - #32 ||
INFO  16:45:29,406 - #39 verify
INFO  16:45:29,406 - #17 (
INFO  16:45:29,406 - #18 )
INFO  16:45:29,406 - #18 )
INFO  16:45:29,406 - #23 print
INFO  16:45:29,406 - #17 (
INFO  16:45:29,406 - #39 ord
INFO  16:45:29,406 - #17 (
INFO  16:45:29,406 - #40 A
INFO  16:45:29,406 - #18 )
INFO  16:45:29,406 - #18 )
INFO  16:45:29,406 - #5 ;
INFO  16:45:29,406 - #26 else
INFO  16:45:29,406 - #23 print
INFO  16:45:29,406 - #17 (
INFO  16:45:29,407 - #39 ord
INFO  16:45:29,407 - #17 (
INFO  16:45:29,407 - #40 a
INFO  16:45:29,407 - #18 )
INFO  16:45:29,407 - #18 )
INFO  16:45:29,407 - #5 ;
INFO  16:45:29,407 - #23 print
INFO  16:45:29,408 - #17 (
INFO  16:45:29,408 - #39 eol
INFO  16:45:29,408 - #18 )
INFO  16:45:29,408 - #5 ;
INFO  16:45:29,408 - #39 i
INFO  16:45:29,409 - #35 =
INFO  16:45:29,409 - #38 0
INFO  16:45:29,409 - #5 ;
INFO  16:45:29,409 - #10 for
INFO  16:45:29,409 - #17 (
INFO  16:45:29,409 - #5 ;
INFO  16:45:29,409 - #39 i
INFO  16:45:29,409 - #29 <
INFO  16:45:29,409 - #38 10
INFO  16:45:29,409 - #5 ;
INFO  16:45:29,409 - #18 )
INFO  16:45:29,410 - #3 {
INFO  16:45:29,410 - #25 if
INFO  16:45:29,410 - #17 (
INFO  16:45:29,410 - #39 i
INFO  16:45:29,410 - #19 ==
INFO  16:45:29,410 - #38 3
INFO  16:45:29,410 - #18 )
INFO  16:45:29,410 - #3 {
INFO  16:45:29,410 - #39 i
INFO  16:45:29,410 - #33 ++
INFO  16:45:29,410 - #5 ;
INFO  16:45:29,410 - #11 continue
ERROR 16:45:29,410 - 
Sintaksna greska na liniji 61
ERROR 16:45:29,410 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 61
