INFO  16:46:01,594 - Compiling source file: /home/dajana/pp1projekat/workspace/MJCompiler/test/program.mj
INFO  16:46:01,706 - #2 program
INFO  16:46:01,706 - #39 test302
INFO  16:46:01,706 - #7 const
INFO  16:46:01,708 - #39 int
INFO  16:46:01,708 - #39 jedan
INFO  16:46:01,710 - #35 =
INFO  16:46:01,710 - #38 1
INFO  16:46:01,710 - #5 ;
INFO  16:46:01,710 - #39 int
INFO  16:46:01,711 - #39 i
INFO  16:46:01,711 - #5 ;
INFO  16:46:01,712 - #39 bool
INFO  16:46:01,712 - #39 ibool
INFO  16:46:01,712 - #5 ;
INFO  16:46:01,712 - #39 int
INFO  16:46:01,713 - #39 niz
INFO  16:46:01,713 - #36 [
INFO  16:46:01,713 - #37 ]
INFO  16:46:01,713 - #5 ;
INFO  16:46:01,713 - #3 {
INFO  16:46:01,713 - #39 int
INFO  16:46:01,714 - #39 sum
INFO  16:46:01,714 - #17 (
INFO  16:46:01,716 - #39 int
INFO  16:46:01,716 - #39 z
INFO  16:46:01,716 - #22 ,
INFO  16:46:01,716 - #39 int
INFO  16:46:01,716 - #39 d
INFO  16:46:01,716 - #18 )
INFO  16:46:01,717 - #3 {
INFO  16:46:01,718 - #20 return
INFO  16:46:01,718 - #39 z
INFO  16:46:01,719 - #21 +
INFO  16:46:01,722 - #39 d
INFO  16:46:01,723 - #5 ;
INFO  16:46:01,724 - #4 }
INFO  16:46:01,725 - #39 int
INFO  16:46:01,725 - #39 inkrement
INFO  16:46:01,725 - #17 (
INFO  16:46:01,726 - #39 int
INFO  16:46:01,726 - #39 a
INFO  16:46:01,726 - #22 ,
INFO  16:46:01,726 - #39 int
INFO  16:46:01,726 - #39 inc
INFO  16:46:01,726 - #18 )
INFO  16:46:01,726 - #39 int
INFO  16:46:01,726 - #39 pom
INFO  16:46:01,726 - #5 ;
INFO  16:46:01,726 - #3 {
INFO  16:46:01,727 - #25 if
INFO  16:46:01,727 - #17 (
INFO  16:46:01,727 - #39 inc
INFO  16:46:01,727 - #19 ==
INFO  16:46:01,727 - #39 jedan
INFO  16:46:01,728 - #18 )
INFO  16:46:01,729 - #39 pom
INFO  16:46:01,729 - #35 =
INFO  16:46:01,729 - #38 1
INFO  16:46:01,729 - #5 ;
INFO  16:46:01,731 - #26 else
INFO  16:46:01,731 - #25 if
INFO  16:46:01,732 - #17 (
INFO  16:46:01,732 - #39 inc
INFO  16:46:01,732 - #19 ==
INFO  16:46:01,732 - #38 2
INFO  16:46:01,732 - #18 )
INFO  16:46:01,733 - #39 pom
INFO  16:46:01,733 - #35 =
INFO  16:46:01,733 - #39 a
INFO  16:46:01,733 - #5 ;
INFO  16:46:01,733 - #20 return
INFO  16:46:01,733 - #39 sum
INFO  16:46:01,734 - #17 (
INFO  16:46:01,734 - #39 a
INFO  16:46:01,734 - #22 ,
INFO  16:46:01,734 - #39 pom
INFO  16:46:01,734 - #18 )
INFO  16:46:01,735 - #5 ;
INFO  16:46:01,736 - #4 }
INFO  16:46:01,736 - #39 bool
INFO  16:46:01,736 - #39 verify
INFO  16:46:01,736 - #17 (
INFO  16:46:01,736 - #18 )
INFO  16:46:01,736 - #3 {
INFO  16:46:01,738 - #23 print
INFO  16:46:01,738 - #17 (
INFO  16:46:01,738 - #40 v
INFO  16:46:01,738 - #18 )
INFO  16:46:01,739 - #5 ;
INFO  16:46:01,739 - #20 return
INFO  16:46:01,739 - #41 false
INFO  16:46:01,739 - #5 ;
INFO  16:46:01,739 - #4 }
INFO  16:46:01,740 - #24 void
INFO  16:46:01,740 - #39 main
INFO  16:46:01,740 - #17 (
INFO  16:46:01,741 - #18 )
INFO  16:46:01,741 - #3 {
INFO  16:46:01,741 - #25 if
INFO  16:46:01,741 - #17 (
INFO  16:46:01,741 - #38 1
INFO  16:46:01,741 - #16 !=
INFO  16:46:01,741 - #38 1
INFO  16:46:01,742 - #18 )
INFO  16:46:01,742 - #23 print
INFO  16:46:01,742 - #17 (
INFO  16:46:01,742 - #12 -
INFO  16:46:01,742 - #38 6
INFO  16:46:01,742 - #18 )
INFO  16:46:01,743 - #5 ;
INFO  16:46:01,743 - #26 else
INFO  16:46:01,743 - #23 print
INFO  16:46:01,743 - #17 (
INFO  16:46:01,743 - #38 0
INFO  16:46:01,743 - #18 )
INFO  16:46:01,743 - #5 ;
INFO  16:46:01,743 - #39 ibool
INFO  16:46:01,743 - #35 =
INFO  16:46:01,743 - #41 false
INFO  16:46:01,744 - #5 ;
INFO  16:46:01,744 - #39 i
INFO  16:46:01,744 - #35 =
INFO  16:46:01,744 - #38 0
INFO  16:46:01,744 - #5 ;
INFO  16:46:01,744 - #10 for
INFO  16:46:01,744 - #17 (
INFO  16:46:01,745 - #39 i
INFO  16:46:01,745 - #35 =
INFO  16:46:01,745 - #38 0
INFO  16:46:01,745 - #5 ;
INFO  16:46:01,746 - #39 i
INFO  16:46:01,746 - #29 <
INFO  16:46:01,746 - #38 5
INFO  16:46:01,747 - #5 ;
INFO  16:46:01,747 - #39 i
INFO  16:46:01,747 - #33 ++
INFO  16:46:01,747 - #18 )
INFO  16:46:01,747 - #3 {
INFO  16:46:01,748 - #25 if
INFO  16:46:01,748 - #17 (
INFO  16:46:01,748 - #39 i
INFO  16:46:01,748 - #19 ==
INFO  16:46:01,748 - #38 2
INFO  16:46:01,748 - #18 )
INFO  16:46:01,748 - #39 ibool
INFO  16:46:01,748 - #35 =
INFO  16:46:01,748 - #41 true
INFO  16:46:01,748 - #5 ;
INFO  16:46:01,748 - #4 }
INFO  16:46:01,749 - #25 if
INFO  16:46:01,749 - #17 (
INFO  16:46:01,749 - #39 ibool
INFO  16:46:01,749 - #18 )
INFO  16:46:01,749 - #25 if
INFO  16:46:01,750 - #17 (
INFO  16:46:01,750 - #39 i
INFO  16:46:01,750 - #19 ==
INFO  16:46:01,750 - #38 5
INFO  16:46:01,750 - #18 )
INFO  16:46:01,750 - #23 print
INFO  16:46:01,750 - #17 (
INFO  16:46:01,750 - #38 1
INFO  16:46:01,750 - #18 )
INFO  16:46:01,750 - #5 ;
INFO  16:46:01,750 - #26 else
INFO  16:46:01,750 - #23 print
INFO  16:46:01,750 - #17 (
INFO  16:46:01,750 - #12 -
INFO  16:46:01,751 - #38 1
INFO  16:46:01,751 - #18 )
INFO  16:46:01,751 - #5 ;
INFO  16:46:01,751 - #39 niz
INFO  16:46:01,751 - #35 =
INFO  16:46:01,751 - #8 new
INFO  16:46:01,751 - #39 int
INFO  16:46:01,751 - #36 [
INFO  16:46:01,751 - #38 3
INFO  16:46:01,751 - #37 ]
INFO  16:46:01,751 - #5 ;
INFO  16:46:01,752 - #39 niz
INFO  16:46:01,752 - #36 [
INFO  16:46:01,752 - #38 0
INFO  16:46:01,752 - #37 ]
INFO  16:46:01,752 - #35 =
INFO  16:46:01,753 - #38 1
INFO  16:46:01,753 - #5 ;
INFO  16:46:01,753 - #39 niz
INFO  16:46:01,753 - #36 [
INFO  16:46:01,753 - #38 1
INFO  16:46:01,753 - #37 ]
INFO  16:46:01,753 - #35 =
INFO  16:46:01,753 - #38 2
INFO  16:46:01,753 - #5 ;
INFO  16:46:01,753 - #39 niz
INFO  16:46:01,754 - #36 [
INFO  16:46:01,754 - #38 2
INFO  16:46:01,754 - #37 ]
INFO  16:46:01,754 - #35 =
INFO  16:46:01,754 - #39 sum
INFO  16:46:01,754 - #17 (
INFO  16:46:01,754 - #39 niz
INFO  16:46:01,754 - #36 [
INFO  16:46:01,755 - #38 1
INFO  16:46:01,755 - #37 ]
INFO  16:46:01,755 - #22 ,
INFO  16:46:01,755 - #39 niz
INFO  16:46:01,755 - #36 [
INFO  16:46:01,755 - #38 0
INFO  16:46:01,755 - #37 ]
INFO  16:46:01,755 - #18 )
INFO  16:46:01,755 - #21 +
INFO  16:46:01,756 - #38 1
INFO  16:46:01,756 - #5 ;
INFO  16:46:01,756 - #25 if
INFO  16:46:01,756 - #17 (
INFO  16:46:01,756 - #39 niz
INFO  16:46:01,756 - #36 [
INFO  16:46:01,756 - #38 2
INFO  16:46:01,756 - #37 ]
INFO  16:46:01,756 - #19 ==
INFO  16:46:01,757 - #38 4
INFO  16:46:01,757 - #32 ||
INFO  16:46:01,757 - #39 verify
INFO  16:46:01,757 - #17 (
INFO  16:46:01,757 - #18 )
INFO  16:46:01,758 - #18 )
INFO  16:46:01,758 - #23 print
INFO  16:46:01,758 - #17 (
INFO  16:46:01,758 - #39 ord
INFO  16:46:01,758 - #17 (
INFO  16:46:01,758 - #40 A
INFO  16:46:01,758 - #18 )
INFO  16:46:01,758 - #18 )
INFO  16:46:01,759 - #5 ;
INFO  16:46:01,759 - #26 else
INFO  16:46:01,759 - #23 print
INFO  16:46:01,759 - #17 (
INFO  16:46:01,759 - #39 ord
INFO  16:46:01,759 - #17 (
INFO  16:46:01,759 - #40 a
INFO  16:46:01,759 - #18 )
INFO  16:46:01,759 - #18 )
INFO  16:46:01,759 - #5 ;
INFO  16:46:01,759 - #23 print
INFO  16:46:01,761 - #17 (
INFO  16:46:01,761 - #39 eol
INFO  16:46:01,762 - #18 )
INFO  16:46:01,762 - #5 ;
INFO  16:46:01,762 - #39 i
INFO  16:46:01,762 - #35 =
INFO  16:46:01,762 - #38 0
INFO  16:46:01,762 - #5 ;
INFO  16:46:01,762 - #10 for
INFO  16:46:01,762 - #17 (
INFO  16:46:01,766 - #5 ;
INFO  16:46:01,775 - #39 i
INFO  16:46:01,775 - #29 <
INFO  16:46:01,775 - #38 10
INFO  16:46:01,775 - #5 ;
INFO  16:46:01,775 - #18 )
INFO  16:46:01,776 - #3 {
INFO  16:46:01,778 - #25 if
INFO  16:46:01,778 - #17 (
INFO  16:46:01,778 - #39 i
INFO  16:46:01,778 - #19 ==
INFO  16:46:01,778 - #38 3
INFO  16:46:01,778 - #18 )
INFO  16:46:01,778 - #3 {
INFO  16:46:01,778 - #39 i
INFO  16:46:01,778 - #33 ++
INFO  16:46:01,778 - #5 ;
INFO  16:46:01,778 - #11 continue
ERROR 16:48:11,250 - 
Sintaksna greska na liniji 61
ERROR 16:48:11,250 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 61
